Loading configuration file: /home/roki/GIT/FPTaylor/./default.cfg
FPTaylor, version 0.9.3+dev

Loading: /home/roki/GIT/FPTaylor/benchmarks/probability/Filters2.txt
Processing: filter2

*************************************
Taylor form for: rnd32((rnd32((rnd32((rnd32((7/10)) * rnd32(x1))) - rnd32((rnd32((13/10)) * rnd32(x0))))) + rnd32((rnd32((7/5)) * rnd32((rnd32((7/10)) * rnd32(x0)))))))

Conservative bound: [-5.960002, 5.960002]

Simplified rounding: rnd[float32,ne,1.00,-24,0]((rnd[float32,ne,1.00,-24,0]((rnd32((rnd32((7/10)) * rnd32(x1))) - rnd32((rnd32((13/10)) * rnd32(x0))))) + rnd32((rnd32((7/5)) * rnd32((rnd32((7/10)) * rnd32(x0)))))))
Building Taylor forms...
Simplifying Taylor forms...
success
v0 = ((((7/10) * x1) - ((13/10) * x0)) + ((7/5) * ((7/10) * x0)))
-1 (32): exp = -24: (1193453903937537/9444732965739290427392)
1 (1): exp = -24: ((((x1 * (1/5)) + (-((x0 * (4/5))))) + ((7/5) * (x0 * (1/5)))) + (((7/10) * x0) * (2/5)))
2 (2): exp = -24: ((7/10) * floor_power2(x1))
3 (4): exp = -24: floor_power2((((7/10) * x1) + interval(-6.55651099634724391420e-08, 6.55651099634724391420e-08)))
4 (7): exp = -24: ((-(((13/10) * floor_power2(x0)))) + ((7/5) * ((7/10) * floor_power2(x0))))
5 (9): exp = -24: (-(floor_power2((((13/10) * x0) + interval(-1.72853472690803766128e-07, 1.72853472690803766128e-07)))))
6 (11): exp = -24: floor_power2(((((7/10) * x1) - ((13/10) * x0)) + interval(-4.17232516980448159680e-07, 4.17232516980448159680e-07)))
7 (17): exp = -24: ((7/5) * floor_power2((((7/10) * x0) + interval(-6.55651099634724391420e-08, 6.55651099634724391420e-08))))
8 (20): exp = -24: floor_power2((((7/5) * ((7/10) * x0)) + interval(-2.08616260692906604107e-07, 2.08616260692906604107e-07)))
9 (22): exp = -24: floor_power2((((((7/10) * x1) - ((13/10) * x0)) + ((7/5) * ((7/10) * x0))) + interval(-9.23872001550308232893e-07, 9.23872001550308232893e-07)))

Corresponding original subexpressions:
1: rnd32(0)
2: rnd32(x1)
3: rnd32((rnd32((7/10)) * rnd32(x1)))
4: rnd32(x0)
5: rnd32((rnd32((13/10)) * rnd32(x0)))
6: rnd[float32,ne,1.00,-24,0]((rnd32((rnd32((7/10)) * rnd32(x1))) - rnd32((rnd32((13/10)) * rnd32(x0)))))
7: rnd32((rnd32((7/10)) * rnd32(x0)))
8: rnd32((rnd32((7/5)) * rnd32((rnd32((7/10)) * rnd32(x0)))))
9: rnd[float32,ne,1.00,-24,0]((rnd[float32,ne,1.00,-24,0]((rnd32((rnd32((7/10)) * rnd32(x1))) - rnd32((rnd32((13/10)) * rnd32(x0))))) + rnd32((rnd32((7/5)) * rnd32((rnd32((7/10)) * rnd32(x0)))))))

bounds: [-2.055313e+00, 2.055313e+00]

Computing absolute errors
-1: exp = -24: 1.263618e-07 (low = 1.263618e-07, subopt = 0.0%)

Solving the exact optimization problem
exact bound (exp = -24): 1.330438e+01 (low = 1.129844e+01, subopt = 15.1%)
total2: 7.531753e-15 (low = 7.531753e-15, subopt = 0.0%)
exact total: 7.930026e-07 (low = 6.734394e-07, subopt = 15.1%)

Computing relative errors
**WARNING**: 
Cannot compute the relative error: values of the function are close to zero

**WARNING**: 0.00000000000000000000000000000000000000000000000000100000000000000000761622370578234285759930916419271389895138472837095389481447900651438935953211746691245522253373491061798089161657965284746296674711629748344421386718750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

Elapsed time: 0.37361
*************************************

-------------------------------------------------------------------------------
Problem: filter2

Optimization lower bounds for error models:
The absolute error model (exact): 6.734394e-07 (suboptimality = 15.1%)

Bounds (without rounding): [-2.055313e+00, 2.055313e+00]
Bounds (floating-point): [-2.05531329300255460879e+00, 2.05531329300255460879e+00]

Absolute error (exact): 7.930026e-07

Elapsed time: 0.37


