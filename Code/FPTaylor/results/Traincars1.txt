Loading configuration file: /home/roki/GIT/FPTaylor/./default.cfg
FPTaylor, version 0.9.3+dev

Loading: /home/roki/GIT/FPTaylor/benchmarks/probability/Traincars1.txt
Processing: traincars1

*************************************
Taylor form for: rnd32((rnd32((rnd32((rnd32((rnd32((-(rnd32((3795323/10000))))) * rnd32(s0))) + rnd32((rnd32((-(rnd32((680451/1250))))) * rnd32(s1))))) + rnd32((rnd32((92729/1000)) * rnd32(s2))))) + rnd32((11291479060402687/2500000000000))))

Conservative bound: [-2672.867956, 5443.882439]

Simplified rounding: rnd[float32,ne,1.00,-24,0]((rnd[float32,ne,1.00,-24,0]((rnd[float32,ne,1.00,-24,0]((rnd32(((-(rnd32((3795323/10000)))) * rnd32(s0))) + rnd32(((-(rnd32((680451/1250)))) * rnd32(s1))))) + rnd32((rnd32((92729/1000)) * rnd32(s2))))) + rnd32((11291479060402687/2500000000000))))
Building Taylor forms...
Simplifying Taylor forms...
success
v0 = (((((-((3795323/10000))) * s0) + ((-((680451/1250))) * s1)) + ((92729/1000) * s2)) + (11291479060402687/2500000000000))
-1 (30): exp = -24: (286991886254185/1152921504606846976)
1 (1): exp = -24: ((((s0 * (-((130048/625)))) + (s1 * (-((222208/625))))) + (s2 * (7808/125))) + (-3537181188096/1220703125))
2 (2): exp = -24: ((-((3795323/10000))) * floor_power2(s0))
3 (4): exp = -24: floor_power2((((-((3795323/10000))) * s0) + interval(-1.47538335896097160286e-04, 1.47538335896097160286e-04)))
4 (7): exp = -24: ((-((680451/1250))) * floor_power2(s1))
5 (9): exp = -24: floor_power2((((-((680451/1250))) * s1) + interval(-4.71485529514029686003e-04, 4.71485529514029686003e-04)))
6 (11): exp = -24: floor_power2(((((-((3795323/10000))) * s0) + ((-((680451/1250))) * s1)) + interval(-9.24199646660127144444e-04, 9.24199646660127144444e-04)))
7 (14): exp = -24: ((92729/1000) * floor_power2(s2))
8 (16): exp = -24: floor_power2((((92729/1000) * s2) + interval(-8.14480799308512547425e-05, 8.14480799308512547425e-05)))
9 (18): exp = -24: floor_power2((((((-((3795323/10000))) * s0) + ((-((680451/1250))) * s1)) + ((92729/1000) * s2)) + interval(-1.28030592971597849405e-03, 1.28030592971597849405e-03)))
10 (21): exp = -24: floor_power2(((((((-((3795323/10000))) * s0) + ((-((680451/1250))) * s1)) + ((92729/1000) * s2)) + (11291479060402687/2500000000000)) + interval(-1.69716047991597899364e-03, 1.69716047991597899364e-03)))

Corresponding original subexpressions:
1: rnd32(0)
2: rnd32(s0)
3: rnd32(((-(rnd32((3795323/10000)))) * rnd32(s0)))
4: rnd32(s1)
5: rnd32(((-(rnd32((680451/1250)))) * rnd32(s1)))
6: rnd[float32,ne,1.00,-24,0]((rnd32(((-(rnd32((3795323/10000)))) * rnd32(s0))) + rnd32(((-(rnd32((680451/1250)))) * rnd32(s1)))))
7: rnd32(s2)
8: rnd32((rnd32((92729/1000)) * rnd32(s2)))
9: rnd[float32,ne,1.00,-24,0]((rnd[float32,ne,1.00,-24,0]((rnd32(((-(rnd32((3795323/10000)))) * rnd32(s0))) + rnd32(((-(rnd32((680451/1250)))) * rnd32(s1))))) + rnd32((rnd32((92729/1000)) * rnd32(s2)))))
10: rnd[float32,ne,1.00,-24,0]((rnd[float32,ne,1.00,-24,0]((rnd[float32,ne,1.00,-24,0]((rnd32(((-(rnd32((3795323/10000)))) * rnd32(s0))) + rnd32(((-(rnd32((680451/1250)))) * rnd32(s1))))) + rnd32((rnd32((92729/1000)) * rnd32(s2))))) + rnd32((11291479060402687/2500000000000))))

bounds: [-2.672865e+03, 5.443882e+03]

Computing absolute errors
-1: exp = -24: 2.489258e-04 (low = 2.489258e-04, subopt = 0.0%)

Solving the exact optimization problem
exact bound (exp = -24): 2.921375e+04 (low = 2.913567e+04, subopt = 0.3%)
total2: 1.483713e-11 (low = 1.483713e-11, subopt = 0.0%)
exact total: 1.741275e-03 (low = 1.736621e-03, subopt = 0.3%)

Computing relative errors
**WARNING**: 
Cannot compute the relative error: values of the function are close to zero

**WARNING**: 0.00000000000000000000000000000000000000000000000000100000000000000000761622370578234285759930916419271389895138472837095389481447900651438935953211746691245522253373491061798089161657965284746296674711629748344421386718750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

Elapsed time: 0.37817
*************************************

-------------------------------------------------------------------------------
Problem: traincars1

Optimization lower bounds for error models:
The absolute error model (exact): 1.736621e-03 (suboptimality = 0.3%)

Bounds (without rounding): [-2.672865e+03, 5.443882e+03]
Bounds (floating-point): [-2.67286669711423610352e+03, 5.44388336543638433795e+03]

Absolute error (exact): 1.741275e-03

Elapsed time: 0.38


