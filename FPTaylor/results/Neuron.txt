Loading configuration file: /home/roki/GIT/FPTaylor/./default.cfg
FPTaylor, version 0.9.3+dev

Loading: /home/roki/GIT/FPTaylor/benchmarks/probability/Neuron.txt
Processing: neuron

*************************************
Taylor form for: rnd32((rnd32(1) / rnd32((rnd32(1) + rnd32(exp(rnd32((-(rnd32((rnd32((rnd32((-(rnd32((29389/10000))))) / rnd32((rnd32(1) + rnd32(exp(rnd32((-(rnd32((rnd32((rnd32((28353/5000)) + rnd32((rnd32((2529/5000)) * rnd32(x2))))) + rnd32((124057/10000))))))))))))) + rnd32((rnd32((rnd32((286263/10000)) / rnd32((rnd32(1) + rnd32(exp(rnd32((-(rnd32((rnd32((rnd32((rnd32((21901/1250)) * rnd32(x2))) + rnd32((139847/10000)))) - rnd32((215653/10000))))))))))))) - rnd32((35407/2500)))))))))))))))

Conservative bound: [0.001140, 0.991797]

Simplified rounding: rnd32((1 / rnd[float32,ne,1.00,-24,0]((1 + rnd32(exp((-(rnd[float32,ne,1.00,-24,0]((rnd32(((-(rnd32((29389/10000)))) / rnd[float32,ne,1.00,-24,0]((1 + rnd32(exp((-(rnd[float32,ne,1.00,-24,0]((rnd[float32,ne,1.00,-24,0]((rnd32((28353/5000)) + rnd32((rnd32((2529/5000)) * rnd32(x2))))) + rnd32((124057/10000)))))))))))) + rnd[float32,ne,1.00,-24,0]((rnd32((rnd32((286263/10000)) / rnd[float32,ne,1.00,-24,0]((1 + rnd32(exp((-(rnd[float32,ne,1.00,-24,0]((rnd[float32,ne,1.00,-24,0]((rnd32((rnd32((21901/1250)) * rnd32(x2))) + rnd32((139847/10000)))) - rnd32((215653/10000)))))))))))) - rnd32((35407/2500))))))))))))))
Building Taylor forms...
Simplifying Taylor forms...
success
v0 = (1 * (1 / (1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500)))))))))
-1 (83): exp = -24: (2504588434349911/34359738368)
1 (2): exp = -24: (((((((((1 * (-(((exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500)))))) * (-(((-((29389/10000))) * (-(((exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000))))) * (-((656/625)))) / ((1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))) * (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))))))))) / ((1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))) * (1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500)))))))))))) + (1 * (-(((exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500)))))) * (-(((-((29389/10000))) * (-(((exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000))))) * (-((x2 * (-92/625))))) / ((1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))) * (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))))))))) / ((1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))) * (1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))))))))) + (1 * (-(((exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500)))))) * (-(((-((29389/10000))) * (-(((exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000))))) * (-((2832/625)))) / ((1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))) * (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))))))))) / ((1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))) * (1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))))))))) + (1 * (-(((exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500)))))) * (-(((1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000))))))) * (-((64/625))))))) / ((1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))) * (1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))))))))) + (1 * (-(((exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500)))))) * (-(((286263/10000) * (-(((exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000))))) * (-((x2 * (3808/625))))) / ((1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))) * (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))))))))) / ((1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))) * (1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))))))))) + (1 * (-(((exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500)))))) * (-(((286263/10000) * (-(((exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000))))) * (-((-2128/625)))) / ((1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))) * (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))))))))) / ((1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))) * (1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))))))))) + (1 * (-(((exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500)))))) * (-(((286263/10000) * (-(((exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000))))) * (-((-((128/625)))))) / ((1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))) * (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))))))))) / ((1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))) * (1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))))))))) + (1 * (-(((exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500)))))) * (-(((1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000))))))) * (-8512/625))))) / ((1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))) * (1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))))))))) + (1 * (-(((exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500)))))) * (-((-((1728/625)))))) / ((1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))) * (1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500)))))))))))))
2 (4): exp = -24: ((1 * (-(((exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500)))))) * (-(((-((29389/10000))) * (-(((exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000))))) * (-(((2529/5000) * floor_power2(x2))))) / ((1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))) * (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))))))))) / ((1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))) * (1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500)))))))))))) + (1 * (-(((exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500)))))) * (-(((286263/10000) * (-(((exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000))))) * (-(((21901/1250) * floor_power2(x2))))) / ((1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))) * (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))))))))) / ((1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))) * (1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500)))))))))))))
3 (6): exp = -24: (1 * (-(((exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500)))))) * (-(((-((29389/10000))) * (-(((exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000))))) * (-(floor_power2((((2529/5000) * x2) + interval(-1.19239093180567594914e-08, 1.19239093180567594914e-08)))))) / ((1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))) * (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))))))))) / ((1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))) * (1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))))))))
4 (8): exp = -24: (1 * (-(((exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500)))))) * (-(((-((29389/10000))) * (-(((exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000))))) * (-(floor_power2((((28353/5000) + ((2529/5000) * x2)) + interval(-8.93861056681544259772e-08, 8.93861056681544259772e-08)))))) / ((1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))) * (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))))))))) / ((1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))) * (1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))))))))
5 (11): exp = -24: (1 * (-(((exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500)))))) * (-(((-((29389/10000))) * (-(((exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000))))) * (-(floor_power2(((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)) + interval(-5.97885251175967171151e-07, 5.97885251175967171151e-07)))))) / ((1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))) * (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))))))))) / ((1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))) * (1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))))))))
6 (14): exp = -24: (1 * (-(((exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500)))))) * (-(((-((29389/10000))) * (-((floor_power2((exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000))))) + interval(-1.78840134499858512385e-14, 1.78840134499858512385e-14))) / ((1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))) * (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))))))))) / ((1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))) * (1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))))))))
7 (16): exp = -24: (1 * (-(((exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500)))))) * (-(((-((29389/10000))) * (-((floor_power2(((1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))) + interval(-1.83281026598359138546e-14, 1.83281026598359138546e-14))) / ((1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))) * (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))))))))) / ((1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))) * (1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))))))))
8 (20): exp = -24: (1 * (-(((exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500)))))) * (-(floor_power2((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + interval(-1.81275666918793175719e-07, 1.81275666918793175719e-07)))))) / ((1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))) * (1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))))))))
9 (26): exp = -24: (1 * (-(((exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500)))))) * (-(((286263/10000) * (-(((exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000))))) * (-(floor_power2((((21901/1250) * x2) + interval(-4.42659860300409541826e-07, 4.42659860300409541826e-07)))))) / ((1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))) * (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))))))))) / ((1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))) * (1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))))))))
10 (29): exp = -24: (1 * (-(((exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500)))))) * (-(((286263/10000) * (-(((exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000))))) * (-(floor_power2(((((21901/1250) * x2) + (139847/10000)) + interval(-1.12243891303478474325e-06, 1.12243891303478474325e-06)))))) / ((1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))) * (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))))))))) / ((1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))) * (1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))))))))
11 (32): exp = -24: (1 * (-(((exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500)))))) * (-(((286263/10000) * (-(((exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000))))) * (-(floor_power2((((((21901/1250) * x2) + (139847/10000)) - (215653/10000)) + interval(-2.08832026069103466939e-06, 2.08832026069103466939e-06)))))) / ((1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))) * (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))))))))) / ((1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))) * (1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))))))))
12 (35): exp = -24: (1 * (-(((exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500)))))) * (-(((286263/10000) * (-((floor_power2((exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000))))) + interval(-3.80677848620648017505e-06, 3.80677848620648017505e-06))) / ((1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))) * (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))))))))) / ((1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))) * (1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))))))))
13 (37): exp = -24: (1 * (-(((exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500)))))) * (-(((286263/10000) * (-((floor_power2(((1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))) + interval(-3.86638313098187080005e-06, 3.86638313098187080005e-06))) / ((1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))) * (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))))))))) / ((1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))) * (1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))))))))
14 (41): exp = -24: (1 * (-(((exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500)))))) * (-(floor_power2((((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) + interval(-6.73756857680608790481e-05, 6.73756857680608790481e-05)))))) / ((1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))) * (1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))))))))
15 (44): exp = -24: (1 * (-(((exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500)))))) * (-(floor_power2(((((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500)) + interval(-6.84941550063421244511e-05, 6.84941550063421244511e-05)))))) / ((1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))) * (1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))))))))
16 (46): exp = -24: (1 * (-(((exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500)))))) * (-(floor_power2(((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))) + interval(-6.90330585419134378508e-05, 6.90330585419134378508e-05)))))) / ((1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))) * (1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))))))))
17 (49): exp = -24: (1 * (-((floor_power2((exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500)))))) + interval(-6.07152143744863551089e-02, 6.07152143744863551089e-02))) / ((1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))) * (1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))))))))
18 (51): exp = -24: (1 * (-((floor_power2(((1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))) + interval(-6.07457319526113551089e-02, 6.07457319526113551089e-02))) / ((1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))) * (1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))))))))
19 (55): exp = -24: floor_power2(((1 * (1 / (1 + exp((-((((-((29389/10000))) * (1 / (1 + exp((-((((28353/5000) + ((2529/5000) * x2)) + (124057/10000)))))))) + (((286263/10000) * (1 / (1 + exp((-(((((21901/1250) * x2) + (139847/10000)) - (215653/10000)))))))) - (35407/2500))))))))) + interval(-6.41255871444171843265e-02, 6.41255871444171843265e-02)))

Corresponding original subexpressions:
1: rnd32(0)
2: rnd32(x2)
3: rnd32((rnd32((2529/5000)) * rnd32(x2)))
4: rnd[float32,ne,1.00,-24,0]((rnd32((28353/5000)) + rnd32((rnd32((2529/5000)) * rnd32(x2)))))
5: rnd[float32,ne,1.00,-24,0]((rnd[float32,ne,1.00,-24,0]((rnd32((28353/5000)) + rnd32((rnd32((2529/5000)) * rnd32(x2))))) + rnd32((124057/10000))))
6: rnd32(exp((-(rnd[float32,ne,1.00,-24,0]((rnd[float32,ne,1.00,-24,0]((rnd32((28353/5000)) + rnd32((rnd32((2529/5000)) * rnd32(x2))))) + rnd32((124057/10000))))))))
7: rnd[float32,ne,1.00,-24,0]((1 + rnd32(exp((-(rnd[float32,ne,1.00,-24,0]((rnd[float32,ne,1.00,-24,0]((rnd32((28353/5000)) + rnd32((rnd32((2529/5000)) * rnd32(x2))))) + rnd32((124057/10000))))))))))
8: rnd32(((-(rnd32((29389/10000)))) / rnd[float32,ne,1.00,-24,0]((1 + rnd32(exp((-(rnd[float32,ne,1.00,-24,0]((rnd[float32,ne,1.00,-24,0]((rnd32((28353/5000)) + rnd32((rnd32((2529/5000)) * rnd32(x2))))) + rnd32((124057/10000))))))))))))
9: rnd32((rnd32((21901/1250)) * rnd32(x2)))
10: rnd[float32,ne,1.00,-24,0]((rnd32((rnd32((21901/1250)) * rnd32(x2))) + rnd32((139847/10000))))
11: rnd[float32,ne,1.00,-24,0]((rnd[float32,ne,1.00,-24,0]((rnd32((rnd32((21901/1250)) * rnd32(x2))) + rnd32((139847/10000)))) - rnd32((215653/10000))))
12: rnd32(exp((-(rnd[float32,ne,1.00,-24,0]((rnd[float32,ne,1.00,-24,0]((rnd32((rnd32((21901/1250)) * rnd32(x2))) + rnd32((139847/10000)))) - rnd32((215653/10000))))))))
13: rnd[float32,ne,1.00,-24,0]((1 + rnd32(exp((-(rnd[float32,ne,1.00,-24,0]((rnd[float32,ne,1.00,-24,0]((rnd32((rnd32((21901/1250)) * rnd32(x2))) + rnd32((139847/10000)))) - rnd32((215653/10000))))))))))
14: rnd32((rnd32((286263/10000)) / rnd[float32,ne,1.00,-24,0]((1 + rnd32(exp((-(rnd[float32,ne,1.00,-24,0]((rnd[float32,ne,1.00,-24,0]((rnd32((rnd32((21901/1250)) * rnd32(x2))) + rnd32((139847/10000)))) - rnd32((215653/10000))))))))))))
15: rnd[float32,ne,1.00,-24,0]((rnd32((rnd32((286263/10000)) / rnd[float32,ne,1.00,-24,0]((1 + rnd32(exp((-(rnd[float32,ne,1.00,-24,0]((rnd[float32,ne,1.00,-24,0]((rnd32((rnd32((21901/1250)) * rnd32(x2))) + rnd32((139847/10000)))) - rnd32((215653/10000)))))))))))) - rnd32((35407/2500))))
16: rnd[float32,ne,1.00,-24,0]((rnd32(((-(rnd32((29389/10000)))) / rnd[float32,ne,1.00,-24,0]((1 + rnd32(exp((-(rnd[float32,ne,1.00,-24,0]((rnd[float32,ne,1.00,-24,0]((rnd32((28353/5000)) + rnd32((rnd32((2529/5000)) * rnd32(x2))))) + rnd32((124057/10000)))))))))))) + rnd[float32,ne,1.00,-24,0]((rnd32((rnd32((286263/10000)) / rnd[float32,ne,1.00,-24,0]((1 + rnd32(exp((-(rnd[float32,ne,1.00,-24,0]((rnd[float32,ne,1.00,-24,0]((rnd32((rnd32((21901/1250)) * rnd32(x2))) + rnd32((139847/10000)))) - rnd32((215653/10000)))))))))))) - rnd32((35407/2500))))))
17: rnd32(exp((-(rnd[float32,ne,1.00,-24,0]((rnd32(((-(rnd32((29389/10000)))) / rnd[float32,ne,1.00,-24,0]((1 + rnd32(exp((-(rnd[float32,ne,1.00,-24,0]((rnd[float32,ne,1.00,-24,0]((rnd32((28353/5000)) + rnd32((rnd32((2529/5000)) * rnd32(x2))))) + rnd32((124057/10000)))))))))))) + rnd[float32,ne,1.00,-24,0]((rnd32((rnd32((286263/10000)) / rnd[float32,ne,1.00,-24,0]((1 + rnd32(exp((-(rnd[float32,ne,1.00,-24,0]((rnd[float32,ne,1.00,-24,0]((rnd32((rnd32((21901/1250)) * rnd32(x2))) + rnd32((139847/10000)))) - rnd32((215653/10000)))))))))))) - rnd32((35407/2500))))))))))
18: rnd[float32,ne,1.00,-24,0]((1 + rnd32(exp((-(rnd[float32,ne,1.00,-24,0]((rnd32(((-(rnd32((29389/10000)))) / rnd[float32,ne,1.00,-24,0]((1 + rnd32(exp((-(rnd[float32,ne,1.00,-24,0]((rnd[float32,ne,1.00,-24,0]((rnd32((28353/5000)) + rnd32((rnd32((2529/5000)) * rnd32(x2))))) + rnd32((124057/10000)))))))))))) + rnd[float32,ne,1.00,-24,0]((rnd32((rnd32((286263/10000)) / rnd[float32,ne,1.00,-24,0]((1 + rnd32(exp((-(rnd[float32,ne,1.00,-24,0]((rnd[float32,ne,1.00,-24,0]((rnd32((rnd32((21901/1250)) * rnd32(x2))) + rnd32((139847/10000)))) - rnd32((215653/10000)))))))))))) - rnd32((35407/2500))))))))))))
19: rnd32((1 / rnd[float32,ne,1.00,-24,0]((1 + rnd32(exp((-(rnd[float32,ne,1.00,-24,0]((rnd32(((-(rnd32((29389/10000)))) / rnd[float32,ne,1.00,-24,0]((1 + rnd32(exp((-(rnd[float32,ne,1.00,-24,0]((rnd[float32,ne,1.00,-24,0]((rnd32((28353/5000)) + rnd32((rnd32((2529/5000)) * rnd32(x2))))) + rnd32((124057/10000)))))))))))) + rnd[float32,ne,1.00,-24,0]((rnd32((rnd32((286263/10000)) / rnd[float32,ne,1.00,-24,0]((1 + rnd32(exp((-(rnd[float32,ne,1.00,-24,0]((rnd[float32,ne,1.00,-24,0]((rnd32((rnd32((21901/1250)) * rnd32(x2))) + rnd32((139847/10000)))) - rnd32((215653/10000)))))))))))) - rnd32((35407/2500))))))))))))))

bounds: [1.139664e-03, 9.917960e-01]

Computing absolute errors
-1: exp = -24: 7.289312e+04 (low = 7.289312e+04, subopt = 0.0%)

Solving the exact optimization problem
exact bound (exp = -24): 1.410798e+02 (low = 5.993150e+01, subopt = 57.5%)
total2: 4.344768e-03 (low = 4.344768e-03, subopt = 0.0%)
exact total: 4.353177e-03 (low = 4.348341e-03, subopt = 0.1%)
**WARNING**: Large second-order error: 4.344768e-03 (first-order = 8.409013e-06)
**WARNING**: Try intermediate-opt = true or manually split intervals of input variables.

Computing relative errors
-1: exp = -24: 7.289312e+04 (low = 7.289312e+04, subopt = 0.0%)

Solving the exact optimization problem
exact bound-rel (exp = -24): 1.232886e+03 (low = 2.232332e+02, subopt = 81.9%)
total2: 3.812325e+00 (low = 4.380708e-03, subopt = 99.9%)
exact total-rel: 3.812398e+00 (low = 4.394013e-03, subopt = 99.9%)
**WARNING**: Large second-order error: 3.812325e+00 (first-order = 7.348575e-05)
**WARNING**: Try intermediate-opt = true or manually split intervals of input variables.

Elapsed time: 1.41301
*************************************

-------------------------------------------------------------------------------
Problem: neuron

Optimization lower bounds for error models:
The absolute error model (exact): 4.348341e-03 (suboptimality = 0.1%)
The relative error model (exact): 4.394013e-03 (suboptimality = 99.9%)

Bounds (without rounding): [1.139664e-03, 9.917960e-01]
Bounds (floating-point): [-3.21351363822878783455e-03, 9.96149179616870328324e-01]

Absolute error (exact): 4.353177e-03
Relative error (exact): 3.812398e+00

Elapsed time: 1.41


