Loading configuration file: /home/roki/GIT/FPTaylor/./default.cfg
FPTaylor, version 0.9.3+dev

Loading: /home/roki/GIT/FPTaylor/benchmarks/probability/SineOrder3.txt
Processing: sineorder3

*************************************
Taylor form for: rnd32((rnd32((rnd32((238732414637843/250000000000000)) * rnd32(x))) - rnd32((rnd32((rnd32((rnd32((6450306886639899/50000000000000000)) * rnd32(x))) * rnd32(x))) * rnd32(x)))))

Conservative bound: [-2.941909, 2.941909]

Simplified rounding: rnd[float32,ne,1.00,-24,0]((rnd32((rnd32((238732414637843/250000000000000)) * rnd32(x))) - rnd32((rnd32((rnd32((rnd32((6450306886639899/50000000000000000)) * rnd32(x))) * rnd32(x))) * rnd32(x)))))
Building Taylor forms...
Simplifying Taylor forms...
success
v0 = (((238732414637843/250000000000000) * x) - ((((6450306886639899/50000000000000000) * x) * x) * x))
-1 (28): exp = -24: (1957481876634339/9444732965739290427392)
1 (1): exp = -24: ((x * (4465411839/30517578125)) + (-((x * (x * (x * (268764959701/3051757812500)))))))
2 (2): exp = -24: (((((238732414637843/250000000000000) * floor_power2(x)) + (-(((((6450306886639899/50000000000000000) * x) * x) * floor_power2(x))))) + (-((x * (((6450306886639899/50000000000000000) * x) * floor_power2(x)))))) + (-((x * (x * ((6450306886639899/50000000000000000) * floor_power2(x)))))))
3 (4): exp = -24: floor_power2((((238732414637843/250000000000000) * x) + interval(-7.43612585993757032969e-08, 7.43612585993757032969e-08)))
4 (9): exp = -24: (-((x * (x * floor_power2((((6450306886639899/50000000000000000) * x) + interval(-1.81879965646124484681e-08, 1.81879965646124484681e-08)))))))
5 (13): exp = -24: (-((x * floor_power2(((((6450306886639899/50000000000000000) * x) * x) + interval(-8.15570475160047873820e-08, 8.15570475160047873820e-08))))))
6 (17): exp = -24: (-(floor_power2((((((6450306886639899/50000000000000000) * x) * x) * x) + interval(-2.53476206498570070156e-07, 2.53476206498570070156e-07)))))
7 (19): exp = -24: floor_power2(((((238732414637843/250000000000000) * x) - ((((6450306886639899/50000000000000000) * x) * x) * x)) + interval(-4.47046754648727129332e-07, 4.47046754648727129332e-07)))

Corresponding original subexpressions:
1: rnd32(0)
2: rnd32(x)
3: rnd32((rnd32((238732414637843/250000000000000)) * rnd32(x)))
4: rnd32((rnd32((6450306886639899/50000000000000000)) * rnd32(x)))
5: rnd32((rnd32((rnd32((6450306886639899/50000000000000000)) * rnd32(x))) * rnd32(x)))
6: rnd32((rnd32((rnd32((rnd32((6450306886639899/50000000000000000)) * rnd32(x))) * rnd32(x))) * rnd32(x)))
7: rnd[float32,ne,1.00,-24,0]((rnd32((rnd32((238732414637843/250000000000000)) * rnd32(x))) - rnd32((rnd32((rnd32((rnd32((6450306886639899/50000000000000000)) * rnd32(x))) * rnd32(x))) * rnd32(x)))))

bounds: [-1.014888e+00, 1.014888e+00]

Computing absolute errors
-1: exp = -24: 2.072565e-07 (low = 2.072565e-07, subopt = 0.0%)

Solving the exact optimization problem
exact bound (exp = -24): 5.514195e+00 (low = 5.505050e+00, subopt = 0.2%)
total2: 1.235345e-14 (low = 1.235345e-14, subopt = 0.0%)
exact total: 3.286717e-07 (low = 3.281266e-07, subopt = 0.2%)

Computing relative errors
**WARNING**: 
Cannot compute the relative error: values of the function are close to zero

**WARNING**: 0.00000000000000000000000000000000000000000000000000100000000000000000761622370578234285759930916419271389895138472837095389481447900651438935953211746691245522253373491061798089161657965284746296674711629748344421386718750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

Elapsed time: 0.37707
*************************************

-------------------------------------------------------------------------------
Problem: sineorder3

Optimization lower bounds for error models:
The absolute error model (exact): 3.281266e-07 (suboptimality = 0.2%)

Bounds (without rounding): [-1.014888e+00, 1.014888e+00]
Bounds (floating-point): [-1.01488840237639554864e+00, 1.01488840237639554864e+00]

Absolute error (exact): 3.286717e-07

Elapsed time: 0.38


