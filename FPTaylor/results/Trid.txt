***** The environment variable FPTAYLOR_BASE is defined = '/home/roki/GIT/FPTaylor'
Loading configuration file: /home/roki/GIT/FPTaylor/default.cfg
FPTaylor, version 0.9.3+dev

Loading: /home/roki/GIT/paf/FPTaylor/Trid.txt
Processing: trid

*************************************
Taylor form for: rnd32((rnd32((rnd32((rnd32((rnd32(x1) - rnd32(1))) * rnd32((rnd32(x1) - rnd32(1))))) + rnd32((rnd32(x2) * rnd32(x1))))) - rnd32((rnd32((rnd32(x2) - rnd32(1))) * rnd32((rnd32(x2) - rnd32(1)))))))

Conservative bound: [-20201.006628, 20201.007236]

Simplified rounding: rnd[32,ne,1.00,-24,0]((rnd[32,ne,1.00,-24,0]((rnd32((rnd[32,ne,1.00,-24,0]((rnd32(x1) - 1)) * rnd[32,ne,1.00,-24,0]((rnd32(x1) - 1)))) + rnd32((rnd32(x2) * rnd32(x1))))) - rnd32((rnd[32,ne,1.00,-24,0]((rnd32(x2) - 1)) * rnd[32,ne,1.00,-24,0]((rnd32(x2) - 1))))))
Building Taylor forms...
Simplifying Taylor forms...
success
v0 = ((((x1 - 1) * (x1 - 1)) + (x2 * x1)) - ((x2 - 1) * (x2 - 1)))
-1 (38): exp = -24: (2533274790395905/1152921504606846976)
1 (4): exp = -24: ((((x1 - 1) * floor_power2(x1)) + ((x1 - 1) * floor_power2(x1))) + (x2 * floor_power2(x1)))
2 (5): exp = -24: (((x1 - 1) * floor_power2(((x1 - 1) + interval(-3.81469726562500000000e-06, 3.81469726562500000000e-06)))) + ((x1 - 1) * floor_power2(((x1 - 1) + interval(-3.81469726562500000000e-06, 3.81469726562500000000e-06)))))
3 (8): exp = -24: floor_power2((((x1 - 1) * (x1 - 1)) + interval(-1.54113775352016091347e-03, 1.54113775352016091347e-03)))
4 (10): exp = -24: (((x1 * floor_power2(x2)) + (-(((x2 - 1) * floor_power2(x2))))) + (-(((x2 - 1) * floor_power2(x2)))))
5 (13): exp = -24: floor_power2(((x2 * x1) + interval(-7.62939467676915228367e-04, 7.62939467676915228367e-04)))
6 (15): exp = -24: floor_power2(((((x1 - 1) * (x1 - 1)) + (x2 * x1)) + interval(-3.28063972119707657552e-03, 3.28063972119707657552e-03)))
7 (21): exp = -24: ((-(((x2 - 1) * floor_power2(((x2 - 1) + interval(-3.81469726562500000000e-06, 3.81469726562500000000e-06)))))) + (-(((x2 - 1) * floor_power2(((x2 - 1) + interval(-3.81469726562500000000e-06, 3.81469726562500000000e-06)))))))
8 (24): exp = -24: (-(floor_power2((((x2 - 1) * (x2 - 1)) + interval(-1.54113775352016091347e-03, 1.54113775352016091347e-03)))))
9 (26): exp = -24: floor_power2((((((x1 - 1) * (x1 - 1)) + (x2 * x1)) - ((x2 - 1) * (x2 - 1))) + interval(-6.28662122471723879003e-03, 6.28662122471723879003e-03)))

Corresponding original subexpressions:
1: rnd32(x1)
2: rnd[32,ne,1.00,-24,0]((rnd32(x1) - 1))
3: rnd32((rnd[32,ne,1.00,-24,0]((rnd32(x1) - 1)) * rnd[32,ne,1.00,-24,0]((rnd32(x1) - 1))))
4: rnd32(x2)
5: rnd32((rnd32(x2) * rnd32(x1)))
6: rnd[32,ne,1.00,-24,0]((rnd32((rnd[32,ne,1.00,-24,0]((rnd32(x1) - 1)) * rnd[32,ne,1.00,-24,0]((rnd32(x1) - 1)))) + rnd32((rnd32(x2) * rnd32(x1)))))
7: rnd[32,ne,1.00,-24,0]((rnd32(x2) - 1))
8: rnd32((rnd[32,ne,1.00,-24,0]((rnd32(x2) - 1)) * rnd[32,ne,1.00,-24,0]((rnd32(x2) - 1))))
9: rnd[32,ne,1.00,-24,0]((rnd[32,ne,1.00,-24,0]((rnd32((rnd[32,ne,1.00,-24,0]((rnd32(x1) - 1)) * rnd[32,ne,1.00,-24,0]((rnd32(x1) - 1)))) + rnd32((rnd32(x2) * rnd32(x1))))) - rnd32((rnd[32,ne,1.00,-24,0]((rnd32(x2) - 1)) * rnd[32,ne,1.00,-24,0]((rnd32(x2) - 1))))))

bounds: [-1.287908e+04, 1.267908e+04]

Computing absolute errors
-1: exp = -24: 2.197266e-03 (low = 2.197266e-03, subopt = 0.0%)

Solving the exact optimization problem
exact bound (exp = -24): 1.016640e+05 (low = 1.008640e+05, subopt = 0.8%)
total2: 1.309672e-10 (low = 1.309672e-10, subopt = 0.0%)
exact total: 6.059647e-03 (low = 6.011963e-03, subopt = 0.8%)

Computing relative errors
**WARNING**: 
Cannot compute the relative error: values of the function are close to zero

Elapsed time: 0.52015
*************************************

-------------------------------------------------------------------------------
Problem: trid

Optimization lower bounds for error models:
The absolute error model (exact): 6.011963e-3 (0x1.8a00009p-8) (suboptimality = 0.8%)

Bounds (without rounding): [-1.287908e+4, 1.267908e+4]
Bounds (floating-point): [-1.287909e+4, 1.267909e+4]

Absolute error (exact): 6.059647e-3 (0x1.8d20009000001p-8)

Elapsed time: 0.52


